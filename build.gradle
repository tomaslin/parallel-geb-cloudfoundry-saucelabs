import org.gradle.cf.DeleteApplicationCloudFoundryTask
import org.gradle.cf.DeleteServiceCloudFoundryTask
import org.gradle.cf.PushApplicationCloudFoundryTask

buildscript{
  repositories{
      mavenCentral()
      maven{
        url = 'http://repo.springframework.org/milestone'
      }
  }
  dependencies{
      classpath group: 'org.gradle.api.plugins', name: 'gradle-cf-plugin', version: '0.2.0'
  }
}

apply plugin: 'cloudfoundry'

task deleteApplications( type: DeleteApplicationCloudFoundryTask ){
    username =cfUsername
    password =cfPassword
    application = '*'
}

task deleteServices( type: DeleteServiceCloudFoundryTask ){
    username = cfUsername
    password = cfPassword
    serviceName = '*'
}

// ./gradlew -PcfUsername='myusername@email.com' -PcfPassword='mypassword' nuke
task nuke(dependsOn: [deleteApplications, deleteServices]){
	description = 'removes all services and applications from the cloud'
	group = 'demo'
}

def deployTasks = tasks.matching { task ->
  task.name.startsWith("deploy${appName}")
}

4.times{ variant -> 

	def app = "${appName}${variant}"

	tasks.create( name: "deploy${app}", type: PushApplicationCloudFoundryTask ){
		username = cfUsername
	    password = cfPassword
		group = 'demo'
		application = "${app}"
		framework = 'grails'
		runtime = 'java7'
		memory = 512
		uris = ["${app}.cloudfoundry.com" as String]
		file = file('target/geb-example-grails-0.1.war')
	}
}

task deployAll(dependsOn: deployTasks){
	group = 'demo'
}